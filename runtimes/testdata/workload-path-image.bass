(defn create-dockerfile [content]
  (let [echo (.sh
               :args ["-c" "echo -n \"$0\" > Dockerfile" content]
               :image {:repository "alpine"}
               :platform {:test true})]
    (run echo)
    (path echo ./)))

(defn arg vals
  {:arg vals})

(def alpine-oci-tarball
  (let [context (create-dockerfile "FROM alpine\nRUN echo 42 > /foo\n")
        build (.build
                :args ["--frontend" "dockerfile.v0"
                       "--local" (arg "context=" context)
                       "--local" (arg "dockerfile=" context)
                       "--output" "type=docker,dest=image.tar"]
                :entrypoint [.buildctl-daemonless.sh]
                :insecure true
                :image {:repository "moby/buildkit"}
                :response {:stdout true}
                :platform {:test true})]
    (run build)
    (path build ./image.tar)))

(next (run (.cat :args [/foo]
                 :image alpine-oci-tarball
                 :response {:stdout true}
                 :platform {:test true})))
