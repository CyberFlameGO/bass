(def nixos
  (from (linux/nixos/nix)
    ; for nix show-derivation
    ($ sh -c "echo experimental-features = nix-command >> /etc/nix/nix.conf")

    ; need jq to preserve hyphens in JSON keys
    ; TODO: reconsider underscorization?
    ($ nix-env -i jq)))

(defn instantiate [nix]
  (from nixos
    ($ nix-instantiate --store ./ $nix)))

(defn inputs [store path]
  (-> ($ sh -c "nix --store ./ show-derivation $0 | jq '.[].inputDrvs | keys'" $path)
      (with-image store)
      (read :json)
      next))

(defn derivation-thunks [acc store path]
  (let [key (string->symbol path)]
    (if (key acc false)
      acc ; don't process the same derivation twice
      (let [ins (inputs store path)
            rec (foldl (fn [acc' p] (derivation-thunks acc' store p)) acc ins)
            parents (map (fn [in] ((string->symbol in) rec)) ins)]
        (assoc rec key (from (if (empty? parents)
                               store
                               parents)
                         ($ nix-store -r $path)))))))

(defn main []
  (let [inst (instantiate *dir*/example.nix)
        path (trim (next (read inst :raw)))]
    (log path)
    (let [thunks (dag {} inst path)
          key (string->symbol path)]
      (log (key thunks)))))
